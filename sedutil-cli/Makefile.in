# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
sbin_PROGRAMS = sedutil-cli$(EXEEXT) linuxpba$(EXEEXT) \
	linuxpba_networked$(EXEEXT)
subdir = .
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(srcdir)/config.h.in depcomp install-sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man8dir)"
PROGRAMS = $(sbin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = linux/DtaDevLinuxNvme.$(OBJEXT) \
	linux/DtaDevLinuxSata.$(OBJEXT) linux/DtaDevOS.$(OBJEXT) \
	linux/DtaDevLinuxDrive.$(OBJEXT)
am__objects_2 = Common/DtaAnnotatedDump.$(OBJEXT) \
	Common/DtaCommand.$(OBJEXT) Common/DtaDev.$(OBJEXT) \
	Common/DtaDevEnterprise.$(OBJEXT) \
	Common/DtaDevGeneric.$(OBJEXT) Common/DtaDevOpal1.$(OBJEXT) \
	Common/DtaDevOpal2.$(OBJEXT) Common/DtaDevOpal.$(OBJEXT) \
	Common/DtaDiskType.$(OBJEXT) Common/DtaHashPwd.$(OBJEXT) \
	Common/DtaHexDump.$(OBJEXT) Common/DtaResponse.$(OBJEXT) \
	Common/DtaSession.$(OBJEXT) Common/pbkdf2/blockwise.$(OBJEXT) \
	Common/pbkdf2/chash.$(OBJEXT) Common/pbkdf2/hmac.$(OBJEXT) \
	Common/pbkdf2/pbkdf2.$(OBJEXT) Common/pbkdf2/sha512.$(OBJEXT) \
	Common/pbkdf2/sha1.$(OBJEXT)
am_linuxpba_OBJECTS = LinuxPBA/LinuxPBA.$(OBJEXT) \
	LinuxPBA/GetPassPhrase.$(OBJEXT) LinuxPBA/UnlockSEDs.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2)
linuxpba_OBJECTS = $(am_linuxpba_OBJECTS)
linuxpba_LDADD = $(LDADD)
am__objects_3 = linux/linuxpba_networked-DtaDevLinuxNvme.$(OBJEXT) \
	linux/linuxpba_networked-DtaDevLinuxSata.$(OBJEXT) \
	linux/linuxpba_networked-DtaDevOS.$(OBJEXT) \
	linux/linuxpba_networked-DtaDevLinuxDrive.$(OBJEXT)
am__objects_4 = Common/linuxpba_networked-DtaAnnotatedDump.$(OBJEXT) \
	Common/linuxpba_networked-DtaCommand.$(OBJEXT) \
	Common/linuxpba_networked-DtaDev.$(OBJEXT) \
	Common/linuxpba_networked-DtaDevEnterprise.$(OBJEXT) \
	Common/linuxpba_networked-DtaDevGeneric.$(OBJEXT) \
	Common/linuxpba_networked-DtaDevOpal1.$(OBJEXT) \
	Common/linuxpba_networked-DtaDevOpal2.$(OBJEXT) \
	Common/linuxpba_networked-DtaDevOpal.$(OBJEXT) \
	Common/linuxpba_networked-DtaDiskType.$(OBJEXT) \
	Common/linuxpba_networked-DtaHashPwd.$(OBJEXT) \
	Common/linuxpba_networked-DtaHexDump.$(OBJEXT) \
	Common/linuxpba_networked-DtaResponse.$(OBJEXT) \
	Common/linuxpba_networked-DtaSession.$(OBJEXT) \
	Common/pbkdf2/linuxpba_networked-blockwise.$(OBJEXT) \
	Common/pbkdf2/linuxpba_networked-chash.$(OBJEXT) \
	Common/pbkdf2/linuxpba_networked-hmac.$(OBJEXT) \
	Common/pbkdf2/linuxpba_networked-pbkdf2.$(OBJEXT) \
	Common/pbkdf2/linuxpba_networked-sha512.$(OBJEXT) \
	Common/pbkdf2/linuxpba_networked-sha1.$(OBJEXT)
am__objects_5 = LinuxPBA/linuxpba_networked-LinuxPBA.$(OBJEXT) \
	LinuxPBA/linuxpba_networked-GetPassPhrase.$(OBJEXT) \
	LinuxPBA/linuxpba_networked-UnlockSEDs.$(OBJEXT) \
	$(am__objects_3) $(am__objects_4)
am_linuxpba_networked_OBJECTS =  \
	LinuxPBA/linuxpba_networked-GetNetPassPhrase.$(OBJEXT) \
	$(am__objects_5)
linuxpba_networked_OBJECTS = $(am_linuxpba_networked_OBJECTS)
linuxpba_networked_LDADD = $(LDADD)
am_sedutil_cli_OBJECTS = Common/sedutil.$(OBJEXT) \
	Common/DtaOptions.$(OBJEXT) LinuxPBA/GetPassPhrase.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2)
sedutil_cli_OBJECTS = $(am_sedutil_cli_OBJECTS)
sedutil_cli_LDADD = $(LDADD)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(linuxpba_SOURCES) $(linuxpba_networked_SOURCES) \
	$(sedutil_cli_SOURCES)
DIST_SOURCES = $(linuxpba_SOURCES) $(linuxpba_networked_SOURCES) \
	$(sedutil_cli_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
man8dir = $(mandir)/man8
NROFF = nroff
MANS = $(man_MANS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = foreign subdir-objects
AM_CFLAGS = -Wall -Werror -std=c11
AM_CXXFLAGS = -Wall -Werror -std=c++11 -I./Common -I./Common/pbkdf2 -I./linux -I./LinuxPBA
SEDUTIL_COMMON_CODE = \
	Common/DtaAnnotatedDump.cpp Common/DtaAnnotatedDump.h \
	Common/DtaCommand.cpp Common/DtaCommand.h \
	Common/DtaDev.cpp Common/DtaDev.h \
	Common/DtaDevEnterprise.cpp Common/DtaDevEnterprise.h \
	Common/DtaDevGeneric.cpp Common/DtaDevGeneric.h \
	Common/DtaDevOpal1.cpp Common/DtaDevOpal1.h \
	Common/DtaDevOpal2.cpp Common/DtaDevOpal2.h \
	Common/DtaDevOpal.cpp Common/DtaDevOpal.h \
	Common/DtaDiskType.cpp Common/DtaDiskType.h \
	Common/DtaHashPwd.cpp Common/DtaHashPwd.h \
	Common/DtaHexDump.cpp Common/DtaHexDump.h \
	Common/DtaResponse.cpp Common/DtaResponse.h \
	Common/DtaSession.cpp Common/DtaSession.h \
	Common/DtaStructures.h Common/log.h Common/DtaLexicon.h Common/DtaConstants.h Common/DtaEndianFixup.h \
	Common/pbkdf2/blockwise.c Common/pbkdf2/blockwise.h Common/pbkdf2/chash.c Common/pbkdf2/chash.h Common/pbkdf2/handy.h \
	Common/pbkdf2/hmac.c Common/pbkdf2/hmac.h Common/pbkdf2/pbkdf2.c Common/pbkdf2/pbkdf2.h Common/pbkdf2/sha512.c Common/pbkdf2/sha1.c \
	Common/pbkdf2/sha2.h Common/pbkdf2/tassert.h Common/pbkdf2/bitops.h Common/SecureContainer.h Common/pbkdf2/sha1.h

LINUX_COMMON_CODE = \
	linux/DtaDevLinuxNvme.cpp linux/DtaDevLinuxNvme.h \
	linux/DtaDevLinuxSata.cpp linux/DtaDevLinuxSata.h \
	linux/DtaDevOS.cpp linux/DtaDevOS.h \
	linux/DtaDevLinuxDrive.cpp linux/DtaDevLinuxDrive.h \
	linux/os.h

sedutil_cli_SOURCES = linux/Version.h Common/sedutil.cpp Common/DtaOptions.cpp Common/DtaOptions.h \
	LinuxPBA/GetPassPhrase.cpp \
	$(LINUX_COMMON_CODE) \
	$(SEDUTIL_COMMON_CODE)

CLEANFILES = linux/Version.h
BUILT_SOURCES = linux/Version.h
linuxpba_SOURCES = LinuxPBA/LinuxPBA.cpp LinuxPBA/GetPassPhrase.cpp LinuxPBA/UnlockSEDs.cpp \
	LinuxPBA/GetPassPhrase.h LinuxPBA/UnlockSEDs.h \
	$(LINUX_COMMON_CODE) \
	$(SEDUTIL_COMMON_CODE)

linuxpba_networked_CPPFLAGS = -DPBA_NETWORKING_BUILD=1
linuxpba_networked_SOURCES = LinuxPBA/GetNetPassPhrase.cpp LinuxPBA/GetNetPassPhrase.h \
	$(linuxpba_SOURCES)

EXTRA_DIST = linux/GitVersion.sh linux/PSIDRevert_LINUX.txt linux/TestSuite.sh README.md docs/sedutil-cli.8
man_MANS = docs/sedutil-cli.8
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
LinuxPBA/$(am__dirstamp):
	@$(MKDIR_P) LinuxPBA
	@: > LinuxPBA/$(am__dirstamp)
LinuxPBA/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) LinuxPBA/$(DEPDIR)
	@: > LinuxPBA/$(DEPDIR)/$(am__dirstamp)
LinuxPBA/LinuxPBA.$(OBJEXT): LinuxPBA/$(am__dirstamp) \
	LinuxPBA/$(DEPDIR)/$(am__dirstamp)
LinuxPBA/GetPassPhrase.$(OBJEXT): LinuxPBA/$(am__dirstamp) \
	LinuxPBA/$(DEPDIR)/$(am__dirstamp)
LinuxPBA/UnlockSEDs.$(OBJEXT): LinuxPBA/$(am__dirstamp) \
	LinuxPBA/$(DEPDIR)/$(am__dirstamp)
linux/$(am__dirstamp):
	@$(MKDIR_P) linux
	@: > linux/$(am__dirstamp)
linux/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) linux/$(DEPDIR)
	@: > linux/$(DEPDIR)/$(am__dirstamp)
linux/DtaDevLinuxNvme.$(OBJEXT): linux/$(am__dirstamp) \
	linux/$(DEPDIR)/$(am__dirstamp)
linux/DtaDevLinuxSata.$(OBJEXT): linux/$(am__dirstamp) \
	linux/$(DEPDIR)/$(am__dirstamp)
linux/DtaDevOS.$(OBJEXT): linux/$(am__dirstamp) \
	linux/$(DEPDIR)/$(am__dirstamp)
linux/DtaDevLinuxDrive.$(OBJEXT): linux/$(am__dirstamp) \
	linux/$(DEPDIR)/$(am__dirstamp)
Common/$(am__dirstamp):
	@$(MKDIR_P) Common
	@: > Common/$(am__dirstamp)
Common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) Common/$(DEPDIR)
	@: > Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaAnnotatedDump.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaCommand.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaDev.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaDevEnterprise.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaDevGeneric.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaDevOpal1.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaDevOpal2.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaDevOpal.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaDiskType.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaHashPwd.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaHexDump.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaResponse.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaSession.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/pbkdf2/$(am__dirstamp):
	@$(MKDIR_P) Common/pbkdf2
	@: > Common/pbkdf2/$(am__dirstamp)
Common/pbkdf2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) Common/pbkdf2/$(DEPDIR)
	@: > Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)
Common/pbkdf2/blockwise.$(OBJEXT): Common/pbkdf2/$(am__dirstamp) \
	Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)
Common/pbkdf2/chash.$(OBJEXT): Common/pbkdf2/$(am__dirstamp) \
	Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)
Common/pbkdf2/hmac.$(OBJEXT): Common/pbkdf2/$(am__dirstamp) \
	Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)
Common/pbkdf2/pbkdf2.$(OBJEXT): Common/pbkdf2/$(am__dirstamp) \
	Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)
Common/pbkdf2/sha512.$(OBJEXT): Common/pbkdf2/$(am__dirstamp) \
	Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)
Common/pbkdf2/sha1.$(OBJEXT): Common/pbkdf2/$(am__dirstamp) \
	Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)

linuxpba$(EXEEXT): $(linuxpba_OBJECTS) $(linuxpba_DEPENDENCIES) $(EXTRA_linuxpba_DEPENDENCIES) 
	@rm -f linuxpba$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(linuxpba_OBJECTS) $(linuxpba_LDADD) $(LIBS)
LinuxPBA/linuxpba_networked-GetNetPassPhrase.$(OBJEXT):  \
	LinuxPBA/$(am__dirstamp) LinuxPBA/$(DEPDIR)/$(am__dirstamp)
LinuxPBA/linuxpba_networked-LinuxPBA.$(OBJEXT):  \
	LinuxPBA/$(am__dirstamp) LinuxPBA/$(DEPDIR)/$(am__dirstamp)
LinuxPBA/linuxpba_networked-GetPassPhrase.$(OBJEXT):  \
	LinuxPBA/$(am__dirstamp) LinuxPBA/$(DEPDIR)/$(am__dirstamp)
LinuxPBA/linuxpba_networked-UnlockSEDs.$(OBJEXT):  \
	LinuxPBA/$(am__dirstamp) LinuxPBA/$(DEPDIR)/$(am__dirstamp)
linux/linuxpba_networked-DtaDevLinuxNvme.$(OBJEXT):  \
	linux/$(am__dirstamp) linux/$(DEPDIR)/$(am__dirstamp)
linux/linuxpba_networked-DtaDevLinuxSata.$(OBJEXT):  \
	linux/$(am__dirstamp) linux/$(DEPDIR)/$(am__dirstamp)
linux/linuxpba_networked-DtaDevOS.$(OBJEXT): linux/$(am__dirstamp) \
	linux/$(DEPDIR)/$(am__dirstamp)
linux/linuxpba_networked-DtaDevLinuxDrive.$(OBJEXT):  \
	linux/$(am__dirstamp) linux/$(DEPDIR)/$(am__dirstamp)
Common/linuxpba_networked-DtaAnnotatedDump.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)
Common/linuxpba_networked-DtaCommand.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)
Common/linuxpba_networked-DtaDev.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/linuxpba_networked-DtaDevEnterprise.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)
Common/linuxpba_networked-DtaDevGeneric.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)
Common/linuxpba_networked-DtaDevOpal1.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)
Common/linuxpba_networked-DtaDevOpal2.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)
Common/linuxpba_networked-DtaDevOpal.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)
Common/linuxpba_networked-DtaDiskType.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)
Common/linuxpba_networked-DtaHashPwd.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)
Common/linuxpba_networked-DtaHexDump.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)
Common/linuxpba_networked-DtaResponse.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)
Common/linuxpba_networked-DtaSession.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)
Common/pbkdf2/linuxpba_networked-blockwise.$(OBJEXT):  \
	Common/pbkdf2/$(am__dirstamp) \
	Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)
Common/pbkdf2/linuxpba_networked-chash.$(OBJEXT):  \
	Common/pbkdf2/$(am__dirstamp) \
	Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)
Common/pbkdf2/linuxpba_networked-hmac.$(OBJEXT):  \
	Common/pbkdf2/$(am__dirstamp) \
	Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)
Common/pbkdf2/linuxpba_networked-pbkdf2.$(OBJEXT):  \
	Common/pbkdf2/$(am__dirstamp) \
	Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)
Common/pbkdf2/linuxpba_networked-sha512.$(OBJEXT):  \
	Common/pbkdf2/$(am__dirstamp) \
	Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)
Common/pbkdf2/linuxpba_networked-sha1.$(OBJEXT):  \
	Common/pbkdf2/$(am__dirstamp) \
	Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)

linuxpba_networked$(EXEEXT): $(linuxpba_networked_OBJECTS) $(linuxpba_networked_DEPENDENCIES) $(EXTRA_linuxpba_networked_DEPENDENCIES) 
	@rm -f linuxpba_networked$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(linuxpba_networked_OBJECTS) $(linuxpba_networked_LDADD) $(LIBS)
Common/sedutil.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Common/DtaOptions.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)

sedutil-cli$(EXEEXT): $(sedutil_cli_OBJECTS) $(sedutil_cli_DEPENDENCIES) $(EXTRA_sedutil_cli_DEPENDENCIES) 
	@rm -f sedutil-cli$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sedutil_cli_OBJECTS) $(sedutil_cli_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f Common/*.$(OBJEXT)
	-rm -f Common/pbkdf2/*.$(OBJEXT)
	-rm -f LinuxPBA/*.$(OBJEXT)
	-rm -f linux/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaAnnotatedDump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaDev.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaDevEnterprise.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaDevGeneric.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaDevOpal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaDevOpal1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaDevOpal2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaDiskType.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaHashPwd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaHexDump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaOptions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaResponse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/DtaSession.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/linuxpba_networked-DtaAnnotatedDump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/linuxpba_networked-DtaCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/linuxpba_networked-DtaDev.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/linuxpba_networked-DtaDevEnterprise.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/linuxpba_networked-DtaDevGeneric.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/linuxpba_networked-DtaDiskType.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/linuxpba_networked-DtaHashPwd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/linuxpba_networked-DtaHexDump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/linuxpba_networked-DtaResponse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/linuxpba_networked-DtaSession.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/$(DEPDIR)/sedutil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/pbkdf2/$(DEPDIR)/blockwise.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/pbkdf2/$(DEPDIR)/chash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/pbkdf2/$(DEPDIR)/hmac.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/pbkdf2/$(DEPDIR)/linuxpba_networked-blockwise.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/pbkdf2/$(DEPDIR)/linuxpba_networked-chash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/pbkdf2/$(DEPDIR)/linuxpba_networked-hmac.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/pbkdf2/$(DEPDIR)/linuxpba_networked-pbkdf2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha512.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/pbkdf2/$(DEPDIR)/pbkdf2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/pbkdf2/$(DEPDIR)/sha1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@Common/pbkdf2/$(DEPDIR)/sha512.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@LinuxPBA/$(DEPDIR)/GetPassPhrase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@LinuxPBA/$(DEPDIR)/LinuxPBA.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@LinuxPBA/$(DEPDIR)/UnlockSEDs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@LinuxPBA/$(DEPDIR)/linuxpba_networked-GetNetPassPhrase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@LinuxPBA/$(DEPDIR)/linuxpba_networked-GetPassPhrase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@LinuxPBA/$(DEPDIR)/linuxpba_networked-LinuxPBA.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@LinuxPBA/$(DEPDIR)/linuxpba_networked-UnlockSEDs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@linux/$(DEPDIR)/DtaDevLinuxDrive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@linux/$(DEPDIR)/DtaDevLinuxNvme.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@linux/$(DEPDIR)/DtaDevLinuxSata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@linux/$(DEPDIR)/DtaDevOS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxDrive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxNvme.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxSata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@linux/$(DEPDIR)/linuxpba_networked-DtaDevOS.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

Common/pbkdf2/linuxpba_networked-blockwise.o: Common/pbkdf2/blockwise.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Common/pbkdf2/linuxpba_networked-blockwise.o -MD -MP -MF Common/pbkdf2/$(DEPDIR)/linuxpba_networked-blockwise.Tpo -c -o Common/pbkdf2/linuxpba_networked-blockwise.o `test -f 'Common/pbkdf2/blockwise.c' || echo '$(srcdir)/'`Common/pbkdf2/blockwise.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) Common/pbkdf2/$(DEPDIR)/linuxpba_networked-blockwise.Tpo Common/pbkdf2/$(DEPDIR)/linuxpba_networked-blockwise.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='Common/pbkdf2/blockwise.c' object='Common/pbkdf2/linuxpba_networked-blockwise.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Common/pbkdf2/linuxpba_networked-blockwise.o `test -f 'Common/pbkdf2/blockwise.c' || echo '$(srcdir)/'`Common/pbkdf2/blockwise.c

Common/pbkdf2/linuxpba_networked-blockwise.obj: Common/pbkdf2/blockwise.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Common/pbkdf2/linuxpba_networked-blockwise.obj -MD -MP -MF Common/pbkdf2/$(DEPDIR)/linuxpba_networked-blockwise.Tpo -c -o Common/pbkdf2/linuxpba_networked-blockwise.obj `if test -f 'Common/pbkdf2/blockwise.c'; then $(CYGPATH_W) 'Common/pbkdf2/blockwise.c'; else $(CYGPATH_W) '$(srcdir)/Common/pbkdf2/blockwise.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) Common/pbkdf2/$(DEPDIR)/linuxpba_networked-blockwise.Tpo Common/pbkdf2/$(DEPDIR)/linuxpba_networked-blockwise.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='Common/pbkdf2/blockwise.c' object='Common/pbkdf2/linuxpba_networked-blockwise.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Common/pbkdf2/linuxpba_networked-blockwise.obj `if test -f 'Common/pbkdf2/blockwise.c'; then $(CYGPATH_W) 'Common/pbkdf2/blockwise.c'; else $(CYGPATH_W) '$(srcdir)/Common/pbkdf2/blockwise.c'; fi`

Common/pbkdf2/linuxpba_networked-chash.o: Common/pbkdf2/chash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Common/pbkdf2/linuxpba_networked-chash.o -MD -MP -MF Common/pbkdf2/$(DEPDIR)/linuxpba_networked-chash.Tpo -c -o Common/pbkdf2/linuxpba_networked-chash.o `test -f 'Common/pbkdf2/chash.c' || echo '$(srcdir)/'`Common/pbkdf2/chash.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) Common/pbkdf2/$(DEPDIR)/linuxpba_networked-chash.Tpo Common/pbkdf2/$(DEPDIR)/linuxpba_networked-chash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='Common/pbkdf2/chash.c' object='Common/pbkdf2/linuxpba_networked-chash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Common/pbkdf2/linuxpba_networked-chash.o `test -f 'Common/pbkdf2/chash.c' || echo '$(srcdir)/'`Common/pbkdf2/chash.c

Common/pbkdf2/linuxpba_networked-chash.obj: Common/pbkdf2/chash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Common/pbkdf2/linuxpba_networked-chash.obj -MD -MP -MF Common/pbkdf2/$(DEPDIR)/linuxpba_networked-chash.Tpo -c -o Common/pbkdf2/linuxpba_networked-chash.obj `if test -f 'Common/pbkdf2/chash.c'; then $(CYGPATH_W) 'Common/pbkdf2/chash.c'; else $(CYGPATH_W) '$(srcdir)/Common/pbkdf2/chash.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) Common/pbkdf2/$(DEPDIR)/linuxpba_networked-chash.Tpo Common/pbkdf2/$(DEPDIR)/linuxpba_networked-chash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='Common/pbkdf2/chash.c' object='Common/pbkdf2/linuxpba_networked-chash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Common/pbkdf2/linuxpba_networked-chash.obj `if test -f 'Common/pbkdf2/chash.c'; then $(CYGPATH_W) 'Common/pbkdf2/chash.c'; else $(CYGPATH_W) '$(srcdir)/Common/pbkdf2/chash.c'; fi`

Common/pbkdf2/linuxpba_networked-hmac.o: Common/pbkdf2/hmac.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Common/pbkdf2/linuxpba_networked-hmac.o -MD -MP -MF Common/pbkdf2/$(DEPDIR)/linuxpba_networked-hmac.Tpo -c -o Common/pbkdf2/linuxpba_networked-hmac.o `test -f 'Common/pbkdf2/hmac.c' || echo '$(srcdir)/'`Common/pbkdf2/hmac.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) Common/pbkdf2/$(DEPDIR)/linuxpba_networked-hmac.Tpo Common/pbkdf2/$(DEPDIR)/linuxpba_networked-hmac.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='Common/pbkdf2/hmac.c' object='Common/pbkdf2/linuxpba_networked-hmac.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Common/pbkdf2/linuxpba_networked-hmac.o `test -f 'Common/pbkdf2/hmac.c' || echo '$(srcdir)/'`Common/pbkdf2/hmac.c

Common/pbkdf2/linuxpba_networked-hmac.obj: Common/pbkdf2/hmac.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Common/pbkdf2/linuxpba_networked-hmac.obj -MD -MP -MF Common/pbkdf2/$(DEPDIR)/linuxpba_networked-hmac.Tpo -c -o Common/pbkdf2/linuxpba_networked-hmac.obj `if test -f 'Common/pbkdf2/hmac.c'; then $(CYGPATH_W) 'Common/pbkdf2/hmac.c'; else $(CYGPATH_W) '$(srcdir)/Common/pbkdf2/hmac.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) Common/pbkdf2/$(DEPDIR)/linuxpba_networked-hmac.Tpo Common/pbkdf2/$(DEPDIR)/linuxpba_networked-hmac.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='Common/pbkdf2/hmac.c' object='Common/pbkdf2/linuxpba_networked-hmac.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Common/pbkdf2/linuxpba_networked-hmac.obj `if test -f 'Common/pbkdf2/hmac.c'; then $(CYGPATH_W) 'Common/pbkdf2/hmac.c'; else $(CYGPATH_W) '$(srcdir)/Common/pbkdf2/hmac.c'; fi`

Common/pbkdf2/linuxpba_networked-pbkdf2.o: Common/pbkdf2/pbkdf2.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Common/pbkdf2/linuxpba_networked-pbkdf2.o -MD -MP -MF Common/pbkdf2/$(DEPDIR)/linuxpba_networked-pbkdf2.Tpo -c -o Common/pbkdf2/linuxpba_networked-pbkdf2.o `test -f 'Common/pbkdf2/pbkdf2.c' || echo '$(srcdir)/'`Common/pbkdf2/pbkdf2.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) Common/pbkdf2/$(DEPDIR)/linuxpba_networked-pbkdf2.Tpo Common/pbkdf2/$(DEPDIR)/linuxpba_networked-pbkdf2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='Common/pbkdf2/pbkdf2.c' object='Common/pbkdf2/linuxpba_networked-pbkdf2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Common/pbkdf2/linuxpba_networked-pbkdf2.o `test -f 'Common/pbkdf2/pbkdf2.c' || echo '$(srcdir)/'`Common/pbkdf2/pbkdf2.c

Common/pbkdf2/linuxpba_networked-pbkdf2.obj: Common/pbkdf2/pbkdf2.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Common/pbkdf2/linuxpba_networked-pbkdf2.obj -MD -MP -MF Common/pbkdf2/$(DEPDIR)/linuxpba_networked-pbkdf2.Tpo -c -o Common/pbkdf2/linuxpba_networked-pbkdf2.obj `if test -f 'Common/pbkdf2/pbkdf2.c'; then $(CYGPATH_W) 'Common/pbkdf2/pbkdf2.c'; else $(CYGPATH_W) '$(srcdir)/Common/pbkdf2/pbkdf2.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) Common/pbkdf2/$(DEPDIR)/linuxpba_networked-pbkdf2.Tpo Common/pbkdf2/$(DEPDIR)/linuxpba_networked-pbkdf2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='Common/pbkdf2/pbkdf2.c' object='Common/pbkdf2/linuxpba_networked-pbkdf2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Common/pbkdf2/linuxpba_networked-pbkdf2.obj `if test -f 'Common/pbkdf2/pbkdf2.c'; then $(CYGPATH_W) 'Common/pbkdf2/pbkdf2.c'; else $(CYGPATH_W) '$(srcdir)/Common/pbkdf2/pbkdf2.c'; fi`

Common/pbkdf2/linuxpba_networked-sha512.o: Common/pbkdf2/sha512.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Common/pbkdf2/linuxpba_networked-sha512.o -MD -MP -MF Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha512.Tpo -c -o Common/pbkdf2/linuxpba_networked-sha512.o `test -f 'Common/pbkdf2/sha512.c' || echo '$(srcdir)/'`Common/pbkdf2/sha512.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha512.Tpo Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha512.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='Common/pbkdf2/sha512.c' object='Common/pbkdf2/linuxpba_networked-sha512.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Common/pbkdf2/linuxpba_networked-sha512.o `test -f 'Common/pbkdf2/sha512.c' || echo '$(srcdir)/'`Common/pbkdf2/sha512.c

Common/pbkdf2/linuxpba_networked-sha512.obj: Common/pbkdf2/sha512.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Common/pbkdf2/linuxpba_networked-sha512.obj -MD -MP -MF Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha512.Tpo -c -o Common/pbkdf2/linuxpba_networked-sha512.obj `if test -f 'Common/pbkdf2/sha512.c'; then $(CYGPATH_W) 'Common/pbkdf2/sha512.c'; else $(CYGPATH_W) '$(srcdir)/Common/pbkdf2/sha512.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha512.Tpo Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha512.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='Common/pbkdf2/sha512.c' object='Common/pbkdf2/linuxpba_networked-sha512.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Common/pbkdf2/linuxpba_networked-sha512.obj `if test -f 'Common/pbkdf2/sha512.c'; then $(CYGPATH_W) 'Common/pbkdf2/sha512.c'; else $(CYGPATH_W) '$(srcdir)/Common/pbkdf2/sha512.c'; fi`

Common/pbkdf2/linuxpba_networked-sha1.o: Common/pbkdf2/sha1.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Common/pbkdf2/linuxpba_networked-sha1.o -MD -MP -MF Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha1.Tpo -c -o Common/pbkdf2/linuxpba_networked-sha1.o `test -f 'Common/pbkdf2/sha1.c' || echo '$(srcdir)/'`Common/pbkdf2/sha1.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha1.Tpo Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha1.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='Common/pbkdf2/sha1.c' object='Common/pbkdf2/linuxpba_networked-sha1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Common/pbkdf2/linuxpba_networked-sha1.o `test -f 'Common/pbkdf2/sha1.c' || echo '$(srcdir)/'`Common/pbkdf2/sha1.c

Common/pbkdf2/linuxpba_networked-sha1.obj: Common/pbkdf2/sha1.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Common/pbkdf2/linuxpba_networked-sha1.obj -MD -MP -MF Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha1.Tpo -c -o Common/pbkdf2/linuxpba_networked-sha1.obj `if test -f 'Common/pbkdf2/sha1.c'; then $(CYGPATH_W) 'Common/pbkdf2/sha1.c'; else $(CYGPATH_W) '$(srcdir)/Common/pbkdf2/sha1.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha1.Tpo Common/pbkdf2/$(DEPDIR)/linuxpba_networked-sha1.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='Common/pbkdf2/sha1.c' object='Common/pbkdf2/linuxpba_networked-sha1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Common/pbkdf2/linuxpba_networked-sha1.obj `if test -f 'Common/pbkdf2/sha1.c'; then $(CYGPATH_W) 'Common/pbkdf2/sha1.c'; else $(CYGPATH_W) '$(srcdir)/Common/pbkdf2/sha1.c'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

LinuxPBA/linuxpba_networked-GetNetPassPhrase.o: LinuxPBA/GetNetPassPhrase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinuxPBA/linuxpba_networked-GetNetPassPhrase.o -MD -MP -MF LinuxPBA/$(DEPDIR)/linuxpba_networked-GetNetPassPhrase.Tpo -c -o LinuxPBA/linuxpba_networked-GetNetPassPhrase.o `test -f 'LinuxPBA/GetNetPassPhrase.cpp' || echo '$(srcdir)/'`LinuxPBA/GetNetPassPhrase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) LinuxPBA/$(DEPDIR)/linuxpba_networked-GetNetPassPhrase.Tpo LinuxPBA/$(DEPDIR)/linuxpba_networked-GetNetPassPhrase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LinuxPBA/GetNetPassPhrase.cpp' object='LinuxPBA/linuxpba_networked-GetNetPassPhrase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinuxPBA/linuxpba_networked-GetNetPassPhrase.o `test -f 'LinuxPBA/GetNetPassPhrase.cpp' || echo '$(srcdir)/'`LinuxPBA/GetNetPassPhrase.cpp

LinuxPBA/linuxpba_networked-GetNetPassPhrase.obj: LinuxPBA/GetNetPassPhrase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinuxPBA/linuxpba_networked-GetNetPassPhrase.obj -MD -MP -MF LinuxPBA/$(DEPDIR)/linuxpba_networked-GetNetPassPhrase.Tpo -c -o LinuxPBA/linuxpba_networked-GetNetPassPhrase.obj `if test -f 'LinuxPBA/GetNetPassPhrase.cpp'; then $(CYGPATH_W) 'LinuxPBA/GetNetPassPhrase.cpp'; else $(CYGPATH_W) '$(srcdir)/LinuxPBA/GetNetPassPhrase.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) LinuxPBA/$(DEPDIR)/linuxpba_networked-GetNetPassPhrase.Tpo LinuxPBA/$(DEPDIR)/linuxpba_networked-GetNetPassPhrase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LinuxPBA/GetNetPassPhrase.cpp' object='LinuxPBA/linuxpba_networked-GetNetPassPhrase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinuxPBA/linuxpba_networked-GetNetPassPhrase.obj `if test -f 'LinuxPBA/GetNetPassPhrase.cpp'; then $(CYGPATH_W) 'LinuxPBA/GetNetPassPhrase.cpp'; else $(CYGPATH_W) '$(srcdir)/LinuxPBA/GetNetPassPhrase.cpp'; fi`

LinuxPBA/linuxpba_networked-LinuxPBA.o: LinuxPBA/LinuxPBA.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinuxPBA/linuxpba_networked-LinuxPBA.o -MD -MP -MF LinuxPBA/$(DEPDIR)/linuxpba_networked-LinuxPBA.Tpo -c -o LinuxPBA/linuxpba_networked-LinuxPBA.o `test -f 'LinuxPBA/LinuxPBA.cpp' || echo '$(srcdir)/'`LinuxPBA/LinuxPBA.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) LinuxPBA/$(DEPDIR)/linuxpba_networked-LinuxPBA.Tpo LinuxPBA/$(DEPDIR)/linuxpba_networked-LinuxPBA.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LinuxPBA/LinuxPBA.cpp' object='LinuxPBA/linuxpba_networked-LinuxPBA.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinuxPBA/linuxpba_networked-LinuxPBA.o `test -f 'LinuxPBA/LinuxPBA.cpp' || echo '$(srcdir)/'`LinuxPBA/LinuxPBA.cpp

LinuxPBA/linuxpba_networked-LinuxPBA.obj: LinuxPBA/LinuxPBA.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinuxPBA/linuxpba_networked-LinuxPBA.obj -MD -MP -MF LinuxPBA/$(DEPDIR)/linuxpba_networked-LinuxPBA.Tpo -c -o LinuxPBA/linuxpba_networked-LinuxPBA.obj `if test -f 'LinuxPBA/LinuxPBA.cpp'; then $(CYGPATH_W) 'LinuxPBA/LinuxPBA.cpp'; else $(CYGPATH_W) '$(srcdir)/LinuxPBA/LinuxPBA.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) LinuxPBA/$(DEPDIR)/linuxpba_networked-LinuxPBA.Tpo LinuxPBA/$(DEPDIR)/linuxpba_networked-LinuxPBA.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LinuxPBA/LinuxPBA.cpp' object='LinuxPBA/linuxpba_networked-LinuxPBA.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinuxPBA/linuxpba_networked-LinuxPBA.obj `if test -f 'LinuxPBA/LinuxPBA.cpp'; then $(CYGPATH_W) 'LinuxPBA/LinuxPBA.cpp'; else $(CYGPATH_W) '$(srcdir)/LinuxPBA/LinuxPBA.cpp'; fi`

LinuxPBA/linuxpba_networked-GetPassPhrase.o: LinuxPBA/GetPassPhrase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinuxPBA/linuxpba_networked-GetPassPhrase.o -MD -MP -MF LinuxPBA/$(DEPDIR)/linuxpba_networked-GetPassPhrase.Tpo -c -o LinuxPBA/linuxpba_networked-GetPassPhrase.o `test -f 'LinuxPBA/GetPassPhrase.cpp' || echo '$(srcdir)/'`LinuxPBA/GetPassPhrase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) LinuxPBA/$(DEPDIR)/linuxpba_networked-GetPassPhrase.Tpo LinuxPBA/$(DEPDIR)/linuxpba_networked-GetPassPhrase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LinuxPBA/GetPassPhrase.cpp' object='LinuxPBA/linuxpba_networked-GetPassPhrase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinuxPBA/linuxpba_networked-GetPassPhrase.o `test -f 'LinuxPBA/GetPassPhrase.cpp' || echo '$(srcdir)/'`LinuxPBA/GetPassPhrase.cpp

LinuxPBA/linuxpba_networked-GetPassPhrase.obj: LinuxPBA/GetPassPhrase.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinuxPBA/linuxpba_networked-GetPassPhrase.obj -MD -MP -MF LinuxPBA/$(DEPDIR)/linuxpba_networked-GetPassPhrase.Tpo -c -o LinuxPBA/linuxpba_networked-GetPassPhrase.obj `if test -f 'LinuxPBA/GetPassPhrase.cpp'; then $(CYGPATH_W) 'LinuxPBA/GetPassPhrase.cpp'; else $(CYGPATH_W) '$(srcdir)/LinuxPBA/GetPassPhrase.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) LinuxPBA/$(DEPDIR)/linuxpba_networked-GetPassPhrase.Tpo LinuxPBA/$(DEPDIR)/linuxpba_networked-GetPassPhrase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LinuxPBA/GetPassPhrase.cpp' object='LinuxPBA/linuxpba_networked-GetPassPhrase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinuxPBA/linuxpba_networked-GetPassPhrase.obj `if test -f 'LinuxPBA/GetPassPhrase.cpp'; then $(CYGPATH_W) 'LinuxPBA/GetPassPhrase.cpp'; else $(CYGPATH_W) '$(srcdir)/LinuxPBA/GetPassPhrase.cpp'; fi`

LinuxPBA/linuxpba_networked-UnlockSEDs.o: LinuxPBA/UnlockSEDs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinuxPBA/linuxpba_networked-UnlockSEDs.o -MD -MP -MF LinuxPBA/$(DEPDIR)/linuxpba_networked-UnlockSEDs.Tpo -c -o LinuxPBA/linuxpba_networked-UnlockSEDs.o `test -f 'LinuxPBA/UnlockSEDs.cpp' || echo '$(srcdir)/'`LinuxPBA/UnlockSEDs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) LinuxPBA/$(DEPDIR)/linuxpba_networked-UnlockSEDs.Tpo LinuxPBA/$(DEPDIR)/linuxpba_networked-UnlockSEDs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LinuxPBA/UnlockSEDs.cpp' object='LinuxPBA/linuxpba_networked-UnlockSEDs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinuxPBA/linuxpba_networked-UnlockSEDs.o `test -f 'LinuxPBA/UnlockSEDs.cpp' || echo '$(srcdir)/'`LinuxPBA/UnlockSEDs.cpp

LinuxPBA/linuxpba_networked-UnlockSEDs.obj: LinuxPBA/UnlockSEDs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinuxPBA/linuxpba_networked-UnlockSEDs.obj -MD -MP -MF LinuxPBA/$(DEPDIR)/linuxpba_networked-UnlockSEDs.Tpo -c -o LinuxPBA/linuxpba_networked-UnlockSEDs.obj `if test -f 'LinuxPBA/UnlockSEDs.cpp'; then $(CYGPATH_W) 'LinuxPBA/UnlockSEDs.cpp'; else $(CYGPATH_W) '$(srcdir)/LinuxPBA/UnlockSEDs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) LinuxPBA/$(DEPDIR)/linuxpba_networked-UnlockSEDs.Tpo LinuxPBA/$(DEPDIR)/linuxpba_networked-UnlockSEDs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LinuxPBA/UnlockSEDs.cpp' object='LinuxPBA/linuxpba_networked-UnlockSEDs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinuxPBA/linuxpba_networked-UnlockSEDs.obj `if test -f 'LinuxPBA/UnlockSEDs.cpp'; then $(CYGPATH_W) 'LinuxPBA/UnlockSEDs.cpp'; else $(CYGPATH_W) '$(srcdir)/LinuxPBA/UnlockSEDs.cpp'; fi`

linux/linuxpba_networked-DtaDevLinuxNvme.o: linux/DtaDevLinuxNvme.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT linux/linuxpba_networked-DtaDevLinuxNvme.o -MD -MP -MF linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxNvme.Tpo -c -o linux/linuxpba_networked-DtaDevLinuxNvme.o `test -f 'linux/DtaDevLinuxNvme.cpp' || echo '$(srcdir)/'`linux/DtaDevLinuxNvme.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxNvme.Tpo linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxNvme.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='linux/DtaDevLinuxNvme.cpp' object='linux/linuxpba_networked-DtaDevLinuxNvme.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o linux/linuxpba_networked-DtaDevLinuxNvme.o `test -f 'linux/DtaDevLinuxNvme.cpp' || echo '$(srcdir)/'`linux/DtaDevLinuxNvme.cpp

linux/linuxpba_networked-DtaDevLinuxNvme.obj: linux/DtaDevLinuxNvme.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT linux/linuxpba_networked-DtaDevLinuxNvme.obj -MD -MP -MF linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxNvme.Tpo -c -o linux/linuxpba_networked-DtaDevLinuxNvme.obj `if test -f 'linux/DtaDevLinuxNvme.cpp'; then $(CYGPATH_W) 'linux/DtaDevLinuxNvme.cpp'; else $(CYGPATH_W) '$(srcdir)/linux/DtaDevLinuxNvme.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxNvme.Tpo linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxNvme.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='linux/DtaDevLinuxNvme.cpp' object='linux/linuxpba_networked-DtaDevLinuxNvme.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o linux/linuxpba_networked-DtaDevLinuxNvme.obj `if test -f 'linux/DtaDevLinuxNvme.cpp'; then $(CYGPATH_W) 'linux/DtaDevLinuxNvme.cpp'; else $(CYGPATH_W) '$(srcdir)/linux/DtaDevLinuxNvme.cpp'; fi`

linux/linuxpba_networked-DtaDevLinuxSata.o: linux/DtaDevLinuxSata.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT linux/linuxpba_networked-DtaDevLinuxSata.o -MD -MP -MF linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxSata.Tpo -c -o linux/linuxpba_networked-DtaDevLinuxSata.o `test -f 'linux/DtaDevLinuxSata.cpp' || echo '$(srcdir)/'`linux/DtaDevLinuxSata.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxSata.Tpo linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxSata.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='linux/DtaDevLinuxSata.cpp' object='linux/linuxpba_networked-DtaDevLinuxSata.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o linux/linuxpba_networked-DtaDevLinuxSata.o `test -f 'linux/DtaDevLinuxSata.cpp' || echo '$(srcdir)/'`linux/DtaDevLinuxSata.cpp

linux/linuxpba_networked-DtaDevLinuxSata.obj: linux/DtaDevLinuxSata.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT linux/linuxpba_networked-DtaDevLinuxSata.obj -MD -MP -MF linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxSata.Tpo -c -o linux/linuxpba_networked-DtaDevLinuxSata.obj `if test -f 'linux/DtaDevLinuxSata.cpp'; then $(CYGPATH_W) 'linux/DtaDevLinuxSata.cpp'; else $(CYGPATH_W) '$(srcdir)/linux/DtaDevLinuxSata.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxSata.Tpo linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxSata.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='linux/DtaDevLinuxSata.cpp' object='linux/linuxpba_networked-DtaDevLinuxSata.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o linux/linuxpba_networked-DtaDevLinuxSata.obj `if test -f 'linux/DtaDevLinuxSata.cpp'; then $(CYGPATH_W) 'linux/DtaDevLinuxSata.cpp'; else $(CYGPATH_W) '$(srcdir)/linux/DtaDevLinuxSata.cpp'; fi`

linux/linuxpba_networked-DtaDevOS.o: linux/DtaDevOS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT linux/linuxpba_networked-DtaDevOS.o -MD -MP -MF linux/$(DEPDIR)/linuxpba_networked-DtaDevOS.Tpo -c -o linux/linuxpba_networked-DtaDevOS.o `test -f 'linux/DtaDevOS.cpp' || echo '$(srcdir)/'`linux/DtaDevOS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) linux/$(DEPDIR)/linuxpba_networked-DtaDevOS.Tpo linux/$(DEPDIR)/linuxpba_networked-DtaDevOS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='linux/DtaDevOS.cpp' object='linux/linuxpba_networked-DtaDevOS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o linux/linuxpba_networked-DtaDevOS.o `test -f 'linux/DtaDevOS.cpp' || echo '$(srcdir)/'`linux/DtaDevOS.cpp

linux/linuxpba_networked-DtaDevOS.obj: linux/DtaDevOS.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT linux/linuxpba_networked-DtaDevOS.obj -MD -MP -MF linux/$(DEPDIR)/linuxpba_networked-DtaDevOS.Tpo -c -o linux/linuxpba_networked-DtaDevOS.obj `if test -f 'linux/DtaDevOS.cpp'; then $(CYGPATH_W) 'linux/DtaDevOS.cpp'; else $(CYGPATH_W) '$(srcdir)/linux/DtaDevOS.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) linux/$(DEPDIR)/linuxpba_networked-DtaDevOS.Tpo linux/$(DEPDIR)/linuxpba_networked-DtaDevOS.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='linux/DtaDevOS.cpp' object='linux/linuxpba_networked-DtaDevOS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o linux/linuxpba_networked-DtaDevOS.obj `if test -f 'linux/DtaDevOS.cpp'; then $(CYGPATH_W) 'linux/DtaDevOS.cpp'; else $(CYGPATH_W) '$(srcdir)/linux/DtaDevOS.cpp'; fi`

linux/linuxpba_networked-DtaDevLinuxDrive.o: linux/DtaDevLinuxDrive.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT linux/linuxpba_networked-DtaDevLinuxDrive.o -MD -MP -MF linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxDrive.Tpo -c -o linux/linuxpba_networked-DtaDevLinuxDrive.o `test -f 'linux/DtaDevLinuxDrive.cpp' || echo '$(srcdir)/'`linux/DtaDevLinuxDrive.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxDrive.Tpo linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxDrive.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='linux/DtaDevLinuxDrive.cpp' object='linux/linuxpba_networked-DtaDevLinuxDrive.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o linux/linuxpba_networked-DtaDevLinuxDrive.o `test -f 'linux/DtaDevLinuxDrive.cpp' || echo '$(srcdir)/'`linux/DtaDevLinuxDrive.cpp

linux/linuxpba_networked-DtaDevLinuxDrive.obj: linux/DtaDevLinuxDrive.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT linux/linuxpba_networked-DtaDevLinuxDrive.obj -MD -MP -MF linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxDrive.Tpo -c -o linux/linuxpba_networked-DtaDevLinuxDrive.obj `if test -f 'linux/DtaDevLinuxDrive.cpp'; then $(CYGPATH_W) 'linux/DtaDevLinuxDrive.cpp'; else $(CYGPATH_W) '$(srcdir)/linux/DtaDevLinuxDrive.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxDrive.Tpo linux/$(DEPDIR)/linuxpba_networked-DtaDevLinuxDrive.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='linux/DtaDevLinuxDrive.cpp' object='linux/linuxpba_networked-DtaDevLinuxDrive.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o linux/linuxpba_networked-DtaDevLinuxDrive.obj `if test -f 'linux/DtaDevLinuxDrive.cpp'; then $(CYGPATH_W) 'linux/DtaDevLinuxDrive.cpp'; else $(CYGPATH_W) '$(srcdir)/linux/DtaDevLinuxDrive.cpp'; fi`

Common/linuxpba_networked-DtaAnnotatedDump.o: Common/DtaAnnotatedDump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaAnnotatedDump.o -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaAnnotatedDump.Tpo -c -o Common/linuxpba_networked-DtaAnnotatedDump.o `test -f 'Common/DtaAnnotatedDump.cpp' || echo '$(srcdir)/'`Common/DtaAnnotatedDump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaAnnotatedDump.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaAnnotatedDump.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaAnnotatedDump.cpp' object='Common/linuxpba_networked-DtaAnnotatedDump.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaAnnotatedDump.o `test -f 'Common/DtaAnnotatedDump.cpp' || echo '$(srcdir)/'`Common/DtaAnnotatedDump.cpp

Common/linuxpba_networked-DtaAnnotatedDump.obj: Common/DtaAnnotatedDump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaAnnotatedDump.obj -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaAnnotatedDump.Tpo -c -o Common/linuxpba_networked-DtaAnnotatedDump.obj `if test -f 'Common/DtaAnnotatedDump.cpp'; then $(CYGPATH_W) 'Common/DtaAnnotatedDump.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaAnnotatedDump.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaAnnotatedDump.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaAnnotatedDump.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaAnnotatedDump.cpp' object='Common/linuxpba_networked-DtaAnnotatedDump.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaAnnotatedDump.obj `if test -f 'Common/DtaAnnotatedDump.cpp'; then $(CYGPATH_W) 'Common/DtaAnnotatedDump.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaAnnotatedDump.cpp'; fi`

Common/linuxpba_networked-DtaCommand.o: Common/DtaCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaCommand.o -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaCommand.Tpo -c -o Common/linuxpba_networked-DtaCommand.o `test -f 'Common/DtaCommand.cpp' || echo '$(srcdir)/'`Common/DtaCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaCommand.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaCommand.cpp' object='Common/linuxpba_networked-DtaCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaCommand.o `test -f 'Common/DtaCommand.cpp' || echo '$(srcdir)/'`Common/DtaCommand.cpp

Common/linuxpba_networked-DtaCommand.obj: Common/DtaCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaCommand.obj -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaCommand.Tpo -c -o Common/linuxpba_networked-DtaCommand.obj `if test -f 'Common/DtaCommand.cpp'; then $(CYGPATH_W) 'Common/DtaCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaCommand.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaCommand.cpp' object='Common/linuxpba_networked-DtaCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaCommand.obj `if test -f 'Common/DtaCommand.cpp'; then $(CYGPATH_W) 'Common/DtaCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaCommand.cpp'; fi`

Common/linuxpba_networked-DtaDev.o: Common/DtaDev.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDev.o -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDev.Tpo -c -o Common/linuxpba_networked-DtaDev.o `test -f 'Common/DtaDev.cpp' || echo '$(srcdir)/'`Common/DtaDev.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDev.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDev.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDev.cpp' object='Common/linuxpba_networked-DtaDev.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDev.o `test -f 'Common/DtaDev.cpp' || echo '$(srcdir)/'`Common/DtaDev.cpp

Common/linuxpba_networked-DtaDev.obj: Common/DtaDev.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDev.obj -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDev.Tpo -c -o Common/linuxpba_networked-DtaDev.obj `if test -f 'Common/DtaDev.cpp'; then $(CYGPATH_W) 'Common/DtaDev.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDev.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDev.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDev.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDev.cpp' object='Common/linuxpba_networked-DtaDev.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDev.obj `if test -f 'Common/DtaDev.cpp'; then $(CYGPATH_W) 'Common/DtaDev.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDev.cpp'; fi`

Common/linuxpba_networked-DtaDevEnterprise.o: Common/DtaDevEnterprise.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDevEnterprise.o -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDevEnterprise.Tpo -c -o Common/linuxpba_networked-DtaDevEnterprise.o `test -f 'Common/DtaDevEnterprise.cpp' || echo '$(srcdir)/'`Common/DtaDevEnterprise.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDevEnterprise.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDevEnterprise.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDevEnterprise.cpp' object='Common/linuxpba_networked-DtaDevEnterprise.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDevEnterprise.o `test -f 'Common/DtaDevEnterprise.cpp' || echo '$(srcdir)/'`Common/DtaDevEnterprise.cpp

Common/linuxpba_networked-DtaDevEnterprise.obj: Common/DtaDevEnterprise.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDevEnterprise.obj -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDevEnterprise.Tpo -c -o Common/linuxpba_networked-DtaDevEnterprise.obj `if test -f 'Common/DtaDevEnterprise.cpp'; then $(CYGPATH_W) 'Common/DtaDevEnterprise.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDevEnterprise.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDevEnterprise.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDevEnterprise.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDevEnterprise.cpp' object='Common/linuxpba_networked-DtaDevEnterprise.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDevEnterprise.obj `if test -f 'Common/DtaDevEnterprise.cpp'; then $(CYGPATH_W) 'Common/DtaDevEnterprise.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDevEnterprise.cpp'; fi`

Common/linuxpba_networked-DtaDevGeneric.o: Common/DtaDevGeneric.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDevGeneric.o -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDevGeneric.Tpo -c -o Common/linuxpba_networked-DtaDevGeneric.o `test -f 'Common/DtaDevGeneric.cpp' || echo '$(srcdir)/'`Common/DtaDevGeneric.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDevGeneric.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDevGeneric.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDevGeneric.cpp' object='Common/linuxpba_networked-DtaDevGeneric.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDevGeneric.o `test -f 'Common/DtaDevGeneric.cpp' || echo '$(srcdir)/'`Common/DtaDevGeneric.cpp

Common/linuxpba_networked-DtaDevGeneric.obj: Common/DtaDevGeneric.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDevGeneric.obj -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDevGeneric.Tpo -c -o Common/linuxpba_networked-DtaDevGeneric.obj `if test -f 'Common/DtaDevGeneric.cpp'; then $(CYGPATH_W) 'Common/DtaDevGeneric.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDevGeneric.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDevGeneric.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDevGeneric.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDevGeneric.cpp' object='Common/linuxpba_networked-DtaDevGeneric.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDevGeneric.obj `if test -f 'Common/DtaDevGeneric.cpp'; then $(CYGPATH_W) 'Common/DtaDevGeneric.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDevGeneric.cpp'; fi`

Common/linuxpba_networked-DtaDevOpal1.o: Common/DtaDevOpal1.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDevOpal1.o -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal1.Tpo -c -o Common/linuxpba_networked-DtaDevOpal1.o `test -f 'Common/DtaDevOpal1.cpp' || echo '$(srcdir)/'`Common/DtaDevOpal1.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal1.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal1.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDevOpal1.cpp' object='Common/linuxpba_networked-DtaDevOpal1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDevOpal1.o `test -f 'Common/DtaDevOpal1.cpp' || echo '$(srcdir)/'`Common/DtaDevOpal1.cpp

Common/linuxpba_networked-DtaDevOpal1.obj: Common/DtaDevOpal1.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDevOpal1.obj -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal1.Tpo -c -o Common/linuxpba_networked-DtaDevOpal1.obj `if test -f 'Common/DtaDevOpal1.cpp'; then $(CYGPATH_W) 'Common/DtaDevOpal1.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDevOpal1.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal1.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal1.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDevOpal1.cpp' object='Common/linuxpba_networked-DtaDevOpal1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDevOpal1.obj `if test -f 'Common/DtaDevOpal1.cpp'; then $(CYGPATH_W) 'Common/DtaDevOpal1.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDevOpal1.cpp'; fi`

Common/linuxpba_networked-DtaDevOpal2.o: Common/DtaDevOpal2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDevOpal2.o -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal2.Tpo -c -o Common/linuxpba_networked-DtaDevOpal2.o `test -f 'Common/DtaDevOpal2.cpp' || echo '$(srcdir)/'`Common/DtaDevOpal2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal2.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDevOpal2.cpp' object='Common/linuxpba_networked-DtaDevOpal2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDevOpal2.o `test -f 'Common/DtaDevOpal2.cpp' || echo '$(srcdir)/'`Common/DtaDevOpal2.cpp

Common/linuxpba_networked-DtaDevOpal2.obj: Common/DtaDevOpal2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDevOpal2.obj -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal2.Tpo -c -o Common/linuxpba_networked-DtaDevOpal2.obj `if test -f 'Common/DtaDevOpal2.cpp'; then $(CYGPATH_W) 'Common/DtaDevOpal2.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDevOpal2.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal2.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDevOpal2.cpp' object='Common/linuxpba_networked-DtaDevOpal2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDevOpal2.obj `if test -f 'Common/DtaDevOpal2.cpp'; then $(CYGPATH_W) 'Common/DtaDevOpal2.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDevOpal2.cpp'; fi`

Common/linuxpba_networked-DtaDevOpal.o: Common/DtaDevOpal.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDevOpal.o -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal.Tpo -c -o Common/linuxpba_networked-DtaDevOpal.o `test -f 'Common/DtaDevOpal.cpp' || echo '$(srcdir)/'`Common/DtaDevOpal.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDevOpal.cpp' object='Common/linuxpba_networked-DtaDevOpal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDevOpal.o `test -f 'Common/DtaDevOpal.cpp' || echo '$(srcdir)/'`Common/DtaDevOpal.cpp

Common/linuxpba_networked-DtaDevOpal.obj: Common/DtaDevOpal.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDevOpal.obj -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal.Tpo -c -o Common/linuxpba_networked-DtaDevOpal.obj `if test -f 'Common/DtaDevOpal.cpp'; then $(CYGPATH_W) 'Common/DtaDevOpal.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDevOpal.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDevOpal.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDevOpal.cpp' object='Common/linuxpba_networked-DtaDevOpal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDevOpal.obj `if test -f 'Common/DtaDevOpal.cpp'; then $(CYGPATH_W) 'Common/DtaDevOpal.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDevOpal.cpp'; fi`

Common/linuxpba_networked-DtaDiskType.o: Common/DtaDiskType.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDiskType.o -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDiskType.Tpo -c -o Common/linuxpba_networked-DtaDiskType.o `test -f 'Common/DtaDiskType.cpp' || echo '$(srcdir)/'`Common/DtaDiskType.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDiskType.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDiskType.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDiskType.cpp' object='Common/linuxpba_networked-DtaDiskType.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDiskType.o `test -f 'Common/DtaDiskType.cpp' || echo '$(srcdir)/'`Common/DtaDiskType.cpp

Common/linuxpba_networked-DtaDiskType.obj: Common/DtaDiskType.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaDiskType.obj -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaDiskType.Tpo -c -o Common/linuxpba_networked-DtaDiskType.obj `if test -f 'Common/DtaDiskType.cpp'; then $(CYGPATH_W) 'Common/DtaDiskType.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDiskType.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaDiskType.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaDiskType.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaDiskType.cpp' object='Common/linuxpba_networked-DtaDiskType.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaDiskType.obj `if test -f 'Common/DtaDiskType.cpp'; then $(CYGPATH_W) 'Common/DtaDiskType.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaDiskType.cpp'; fi`

Common/linuxpba_networked-DtaHashPwd.o: Common/DtaHashPwd.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaHashPwd.o -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaHashPwd.Tpo -c -o Common/linuxpba_networked-DtaHashPwd.o `test -f 'Common/DtaHashPwd.cpp' || echo '$(srcdir)/'`Common/DtaHashPwd.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaHashPwd.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaHashPwd.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaHashPwd.cpp' object='Common/linuxpba_networked-DtaHashPwd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaHashPwd.o `test -f 'Common/DtaHashPwd.cpp' || echo '$(srcdir)/'`Common/DtaHashPwd.cpp

Common/linuxpba_networked-DtaHashPwd.obj: Common/DtaHashPwd.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaHashPwd.obj -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaHashPwd.Tpo -c -o Common/linuxpba_networked-DtaHashPwd.obj `if test -f 'Common/DtaHashPwd.cpp'; then $(CYGPATH_W) 'Common/DtaHashPwd.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaHashPwd.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaHashPwd.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaHashPwd.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaHashPwd.cpp' object='Common/linuxpba_networked-DtaHashPwd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaHashPwd.obj `if test -f 'Common/DtaHashPwd.cpp'; then $(CYGPATH_W) 'Common/DtaHashPwd.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaHashPwd.cpp'; fi`

Common/linuxpba_networked-DtaHexDump.o: Common/DtaHexDump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaHexDump.o -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaHexDump.Tpo -c -o Common/linuxpba_networked-DtaHexDump.o `test -f 'Common/DtaHexDump.cpp' || echo '$(srcdir)/'`Common/DtaHexDump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaHexDump.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaHexDump.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaHexDump.cpp' object='Common/linuxpba_networked-DtaHexDump.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaHexDump.o `test -f 'Common/DtaHexDump.cpp' || echo '$(srcdir)/'`Common/DtaHexDump.cpp

Common/linuxpba_networked-DtaHexDump.obj: Common/DtaHexDump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaHexDump.obj -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaHexDump.Tpo -c -o Common/linuxpba_networked-DtaHexDump.obj `if test -f 'Common/DtaHexDump.cpp'; then $(CYGPATH_W) 'Common/DtaHexDump.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaHexDump.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaHexDump.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaHexDump.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaHexDump.cpp' object='Common/linuxpba_networked-DtaHexDump.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaHexDump.obj `if test -f 'Common/DtaHexDump.cpp'; then $(CYGPATH_W) 'Common/DtaHexDump.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaHexDump.cpp'; fi`

Common/linuxpba_networked-DtaResponse.o: Common/DtaResponse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaResponse.o -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaResponse.Tpo -c -o Common/linuxpba_networked-DtaResponse.o `test -f 'Common/DtaResponse.cpp' || echo '$(srcdir)/'`Common/DtaResponse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaResponse.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaResponse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaResponse.cpp' object='Common/linuxpba_networked-DtaResponse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaResponse.o `test -f 'Common/DtaResponse.cpp' || echo '$(srcdir)/'`Common/DtaResponse.cpp

Common/linuxpba_networked-DtaResponse.obj: Common/DtaResponse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaResponse.obj -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaResponse.Tpo -c -o Common/linuxpba_networked-DtaResponse.obj `if test -f 'Common/DtaResponse.cpp'; then $(CYGPATH_W) 'Common/DtaResponse.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaResponse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaResponse.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaResponse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaResponse.cpp' object='Common/linuxpba_networked-DtaResponse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaResponse.obj `if test -f 'Common/DtaResponse.cpp'; then $(CYGPATH_W) 'Common/DtaResponse.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaResponse.cpp'; fi`

Common/linuxpba_networked-DtaSession.o: Common/DtaSession.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaSession.o -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaSession.Tpo -c -o Common/linuxpba_networked-DtaSession.o `test -f 'Common/DtaSession.cpp' || echo '$(srcdir)/'`Common/DtaSession.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaSession.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaSession.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaSession.cpp' object='Common/linuxpba_networked-DtaSession.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaSession.o `test -f 'Common/DtaSession.cpp' || echo '$(srcdir)/'`Common/DtaSession.cpp

Common/linuxpba_networked-DtaSession.obj: Common/DtaSession.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Common/linuxpba_networked-DtaSession.obj -MD -MP -MF Common/$(DEPDIR)/linuxpba_networked-DtaSession.Tpo -c -o Common/linuxpba_networked-DtaSession.obj `if test -f 'Common/DtaSession.cpp'; then $(CYGPATH_W) 'Common/DtaSession.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaSession.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) Common/$(DEPDIR)/linuxpba_networked-DtaSession.Tpo Common/$(DEPDIR)/linuxpba_networked-DtaSession.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Common/DtaSession.cpp' object='Common/linuxpba_networked-DtaSession.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(linuxpba_networked_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common/linuxpba_networked-DtaSession.obj `if test -f 'Common/DtaSession.cpp'; then $(CYGPATH_W) 'Common/DtaSession.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/DtaSession.cpp'; fi`
install-man8: $(man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(man_MANS)'; \
	test -n "$(man8dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man8dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man8dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.8[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man8dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man8dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man8dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man8dir)" || exit $$?; }; \
	done; }

uninstall-man8:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man8dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.8[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man8dir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(MANS) config.h
installdirs:
	for dir in "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man8dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f Common/$(DEPDIR)/$(am__dirstamp)
	-rm -f Common/$(am__dirstamp)
	-rm -f Common/pbkdf2/$(DEPDIR)/$(am__dirstamp)
	-rm -f Common/pbkdf2/$(am__dirstamp)
	-rm -f LinuxPBA/$(DEPDIR)/$(am__dirstamp)
	-rm -f LinuxPBA/$(am__dirstamp)
	-rm -f linux/$(DEPDIR)/$(am__dirstamp)
	-rm -f linux/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf Common/$(DEPDIR) Common/pbkdf2/$(DEPDIR) LinuxPBA/$(DEPDIR) linux/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-sbinPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man8

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf Common/$(DEPDIR) Common/pbkdf2/$(DEPDIR) LinuxPBA/$(DEPDIR) linux/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-man uninstall-sbinPROGRAMS

uninstall-man: uninstall-man8

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-am clean \
	clean-cscope clean-generic clean-sbinPROGRAMS cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-man8 install-pdf install-pdf-am install-ps \
	install-ps-am install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-man uninstall-man8 \
	uninstall-sbinPROGRAMS

linux/Version.h:
	./linux/GitVersion.sh > linux/Version.h
.INTERMEDIATE: linux/Version.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
